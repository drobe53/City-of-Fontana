[
  {"id":"bd3a5dd7.ad932","type":"inject","z":"3ab40d28.ecf0c2","name":"Send Soil Moisture zone1","topic":"zone1","payload":"true","payloadType":"bool","repeat":"600","crontab":"","once":true,"onceDelay":"","x":151,"y":125,"wires":[["6add0d88.d1d114"]]},
  {"id":"6add0d88.d1d114","type":"function","z":"3ab40d28.ecf0c2","name":"Set Temp & Humid","func":"\nvar zoneNum = msg.topic;\ndevId = \"cof-sm-z1\";\n\nvar date = new Date();\nisodate = date.toISOString(); //\"2017-06-19T12:13:414.493Z\"\n\n// Generate the relative humidity (RH) value\n// within a given range - units %\nfunction generateRHValue() {\n    var min = 5.00, max = 55.50, rhv;\n    rhv = (Math.random() * (max - min) + min);\n    return parseFloat(rhv.toFixed(2));\n}\n\n// Generate the temperature value\n// within a given range - units F (Fahrenheit)\nfunction generateTemp() {\n    var min = 28.00, max = 90, temp;\n    temp = (Math.random() * (max - min) + min);\n    return parseInt(temp.toFixed(2),10);\n}\n\n// Set the correct deviceId for the zone.\n// Defaults to 'cof-sm-z1'.\nif (zoneNum === \"zone2\") {\n    devId = \"cof-sm-z2\";\n} else if (zoneNum === \"zone3\") {\n    devId = \"cof-sm-z3\";\n} else if(zoneNum === \"zone4\") {\n    devId = \"cof-sm-z4\";\n}\n\n// Create MQTT message in JSON\nmsg = {\n  eventOrCommandType:  \"soilmoist\",\n  deviceType: \"CoFSoilMoisture\",\n  deviceId: devId,\n  payload: JSON.stringify(\n    {\n      d:{\n        \"zone\": zoneNum,\n        \"isodate\" : isodate,\n        \"temp\" : generateTemp(),\n        \"humidity\" : generateRHValue()\n      }\n    }\n  )\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":414,"y":59,"wires":[["667e6d80.3142f4","6b27f8c1.47c5b8"]]},
  {"id":"667e6d80.3142f4","type":"debug","z":"3ab40d28.ecf0c2","name":"Debug output","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":600,"y":280,"wires":[]},
  {"id":"20dc3e50.e68f02","type":"comment","z":"3ab40d28.ecf0c2","name":"C-o-F Simulators","info":"Sends simulated device sensor data to IBM Watson IoT Plaform.\n\nCan be configured to send on click or on an automatic interval.\n\n\n#Prerequisite\nOutput node device type and device ID need to match a device that it registered in a running IBM Watson IoT Platform service.\n\n# Watson IoT Platform docs\n[Connecting devices](https://www.bluemix.net/docs/services/IoT/iotplatform_task.html)","x":85,"y":43,"wires":[]},
  {"id":"2e07e66b.352e7a","type":"inject","z":"3ab40d28.ecf0c2","name":"Send Flow Rate","topic":"flow","payload":"true","payloadType":"bool","repeat":"360","crontab":"","once":true,"onceDelay":"","x":126.92858123779297,"y":369.57142639160156,"wires":[["8f3e43d7.82f6"]]},
  {"id":"8f3e43d7.82f6","type":"function","z":"3ab40d28.ecf0c2","name":"Set Flow Rate","func":"// Flow rate in gpm (gallons per minute)\n\nvar date = new Date();\nisodate = date.toISOString(); //\"2017-06-19T12:13:414.493Z\"\n\n// Generate the flow rate\n// within a given range - units gpm\nfunction generateFlowValue() {\n    var min = 0.00, max = 500.12, fr;\n    fr = (Math.random() * (max - min) + min);\n    return parseFloat(fr.toFixed(2));\n}\n\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 9) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  eventOrCommandType:  \"flow\",\n  payload: JSON.stringify(\n    {\n      d:{\n        \"isodate\" : isodate,\n        \"flowrate\" : generateFlowValue()\n      }\n    }\n  )\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":338.1428527832031,"y":369.5714416503906,"wires":[["667e6d80.3142f4","6b27f8c1.47c5b8"]]},
  {"id":"5715009b.c981c","type":"inject","z":"3ab40d28.ecf0c2","name":"Send Soil Moisture zone2","topic":"zone2","payload":"true","payloadType":"bool","repeat":"600","crontab":"","once":true,"onceDelay":"0.5","x":150,"y":167,"wires":[["6add0d88.d1d114"]]},
  {"id":"890d960e.2971d8","type":"inject","z":"3ab40d28.ecf0c2","name":"Send Soil Moisture zone3","topic":"zone3","payload":"true","payloadType":"bool","repeat":"600","crontab":"","once":true,"onceDelay":"1.0","x":147,"y":210,"wires":[["6add0d88.d1d114"]]},
  {"id":"b4bd8eab.a29fc","type":"inject","z":"3ab40d28.ecf0c2","name":"Send Soil Moisture zone4","topic":"zone4","payload":"true","payloadType":"bool","repeat":"600","crontab":"","once":true,"onceDelay":"1.5","x":146,"y":253,"wires":[["6add0d88.d1d114"]]},
  {"id":"921e5e74.83c13","type":"comment","z":"3ab40d28.ecf0c2","name":"Zone Soil Moisture sensors","info":"","x":135.5,"y":88,"wires":[]},
  {"id":"74c17bca.6b0764","type":"comment","z":"3ab40d28.ecf0c2","name":"Park Single Flow Rate sensor","info":"","x":145.5,"y":327,"wires":[]},
  {"id":"6b27f8c1.47c5b8","type":"ibmiot out","z":"3ab40d28.ecf0c2","authentication":"boundService","apiKey":"79a5d918.e87548","outputType":"evt","deviceId":"cof-flow1","deviceType":"CofFlowMtr","eventCommandType":"flow","format":"json","data":"{}","qos":0,"name":"IBM IoT","service":"registered","x":460,"y":200,"wires":[]},
  {"id":"79a5d918.e87548","type":"ibmiot","z":"","name":"CityOfFontana","keepalive":"60","serverName":"4il9s6.messaging.internetofthings.ibmcloud.com","cleansession":true,"appId":"","shared":false}
]
